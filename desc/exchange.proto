syntax = "proto3";

package wolflamp;
option go_package="./wolflamp";

message ExchangeInfo {
  uint64 id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  uint32 status = 4;
  uint64 player_id = 5;
  string transaction_id = 6;
  uint32 type = 7;
  uint32 coin_num = 8;
  uint32 lamp_num = 9;
}

message CreateExchangeReq {
  uint64 player_id = 5;
  string transaction_id = 6;
  uint32 type = 7;
  uint32 coin_num = 8;
  uint32 lamp_num = 9;
}

message UpdateExchangeReq {
  uint64 id = 1;
  optional uint32 status = 4;
  optional uint64 player_id = 5;
  optional string transaction_id = 6;
  optional uint32 type = 7;
  optional uint32 coin_num = 8;
  optional uint32 lamp_num = 9;
}

message DeleteExchangeReq {
  uint64 id = 1;
}

message FindExchangeReq {
  uint64 id = 1;
  optional uint64 player_id = 2;
}

message ExchangeReq {
  uint32 type = 1;
  uint32 coin_amount = 2;
  uint32 lamp_amount = 3;
  uint64 player_id = 4;
}

message ListExchangeReq {
  uint64 page = 1;
  uint64 page_size = 2;
  optional uint64 player_id = 5;
  optional string transaction_id = 6;
  optional uint32 type = 7;
}

message ListExchangeResp {
  uint64 total = 1;
  repeated ExchangeInfo data = 2;
}

service Wolflamp {
  // group: exchange
  rpc createExchange (CreateExchangeReq) returns (BaseIDResp);

  // group: exchange
  rpc updateExchange (UpdateExchangeReq) returns (BaseIDResp);

  // group: exchange
  rpc deleteExchange (DeleteExchangeReq) returns (BaseIDResp);

  // group: exchange
  rpc findExchange (FindExchangeReq) returns (ExchangeInfo);

  // group: exchange
  rpc listExchange (ListExchangeReq) returns (ListExchangeResp);

  // group: exchange
  rpc exchange (ExchangeReq) returns (BaseIDResp);
}
