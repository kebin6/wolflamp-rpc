syntax = "proto3";

package wolflamp;
option go_package="./wolflamp";

message PlayerInfo {
  uint64 id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  uint32 status = 4;
  string name = 5;
  float coin_lamb = 6;
  float token_lamb = 7;
  uint32 rank = 8;
  uint32 invited_num = 10;
  double total_income = 11;
  float profit_and_loss = 12;
  float recent_100_win_percent = 13;
  string invite_code = 14;
  uint64 inviter_id = 15;
  string invited_code = 16;
  float system_commission = 17;
  string email = 18;
  string password = 19;
  string transaction_password = 20;
  string deposit_address = 21;
  uint64 gcics_user_id = 22;
  string gcics_token = 23;
  string return_url = 24;
  double coin_amount = 25;
  double token_amount = 26;
  float coin_win_percent = 27;
  uint32 coin_total_lose_count = 28;
  uint32 coin_total_win_count = 29;
  double coin_total_win_amount = 30;
  double coin_total_lose_amount = 31;
  float token_win_percent = 32;
  uint32 token_total_lose_count = 33;
  uint32 token_total_win_count = 34;
  double token_total_win_amount = 35;
  double token_total_lose_amount = 36;
  string gcics_user_name = 37;
}

message CreatePlayerReq {
  string email = 1;
  string password = 2;
  uint32 status = 4;
  string name = 5;
  float coin_lamb = 6;
  float token_lamb = 17;
  uint32 rank = 7;
  double amount = 8;
  uint32 invited_num = 10;
  double total_income = 11;
  float profit_and_loss = 12;
  string invited_code = 14;
  float system_commission = 15;
  string deposit_address = 16;
  uint64 gcics_user_id = 18;
  string gcics_token = 19;
  string return_url = 20;
  string gcics_user_name = 21;
}

message UpdatePlayerReq {
  uint64 id = 1;
  optional string email = 2;
  optional string password = 3;
  optional uint32 status = 4;
  optional string name = 5;
  optional float coin_lamb = 6;
  optional float token_lamb = 19;
  optional uint32 rank = 7;
  optional double amount = 8;
  optional uint32 invited_num = 10;
  optional double total_income = 11;
  optional float profit_and_loss = 12;
  optional float recent_100_win_percent = 13;
  optional string invite_code = 14;
  optional string invited_code = 15;
  optional float system_commission = 16;
  optional string transaction_password = 17;
  optional string deposit_address = 18;
  optional string gcics_token = 21;
  optional string return_url = 22;
}

message DeletePlayerReq {
  uint64 id = 1;
}

message FindPlayerReq {
  optional uint64 id = 1;
  optional uint64 gcics_user_id = 2;
}

message ListPlayerReq {
  uint64 page = 1;
  uint64 page_size = 2;
  optional string email = 3;
  optional uint32 status = 4;
  optional string name = 5;
  optional uint32 rank = 7;
  optional double amount = 8;
  optional uint32 invited_num = 10;
  optional double total_income = 11;
  optional float profit_and_loss = 12;
  optional string invite_code = 14;
  optional uint64 inviter_id = 15;
  optional string invited_code = 16;
  optional uint64 gcics_user_id = 18;
  optional string gcics_token = 19;
}

message ListPlayerResp {
  uint64 total = 1;
  repeated PlayerInfo data = 2;
}

message GetByEmailReq {
  string email = 1;
}

message GetByInviteCodeReq {
  string invite_code = 1;
}

message InvitorInfo {

  uint64 invitorId = 1;
  uint32 rank = 2;
  float system_commission = 3;
  uint64 playerId = 4;
  string playerEmail = 5;
  uint32 playerLevel = 6;

}

message ValidateGcicsSignReq {
  int64 timestamp = 1;
  string sign = 2;
}

message ValidateGcicsSignResp {
  bool isValid = 1;
}

message GetInvitorListByIdsReq {
  repeated uint64 player_ids = 1;
}

message GetInvitorListByIdsResp {
  repeated InvitorInfo data = 1;
}

message GetGcicsBalanceReq {
  uint64 player_id = 1;
}

message GetGcicsBalanceResp {
  double token = 1;
  double coin = 2;
}

service Wolflamp {
  // group: player
  rpc createPlayer (CreatePlayerReq) returns (BaseIDResp);

  // group: player
  rpc updatePlayer (UpdatePlayerReq) returns (BaseIDResp);

  // group: player
  rpc deletePlayer (DeletePlayerReq) returns (BaseIDResp);

  // group: player
  rpc findPlayer (FindPlayerReq) returns (PlayerInfo);

  // group: player
  rpc listPlayer (ListPlayerReq) returns (ListPlayerResp);

  // group: player
  rpc getByEmail (GetByEmailReq) returns (PlayerInfo);

  // group: player
  rpc getByInviteCode (GetByInviteCodeReq) returns (PlayerInfo);

  // group: player
  rpc getInvitorListByIds (GetInvitorListByIdsReq) returns (GetInvitorListByIdsResp);

  // group: player
  rpc validateGcicsSign (ValidateGcicsSignReq) returns (ValidateGcicsSignResp);

  // group: player
  rpc getGcicsBalance (GetGcicsBalanceReq) returns (GetGcicsBalanceResp);
}
