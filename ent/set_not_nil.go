// Code generated by ent, DO NOT EDIT.

package ent

import "time"

// set field if value's pointer is not nil.
func (b *BannerUpdate) SetNotNilUpdatedAt(value *time.Time) *BannerUpdate {
	if value != nil {
		return b.SetUpdatedAt(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerUpdateOne) SetNotNilUpdatedAt(value *time.Time) *BannerUpdateOne {
	if value != nil {
		return b.SetUpdatedAt(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerCreate) SetNotNilUpdatedAt(value *time.Time) *BannerCreate {
	if value != nil {
		return b.SetUpdatedAt(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerUpdate) SetNotNilStatus(value *uint8) *BannerUpdate {
	if value != nil {
		return b.SetStatus(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerUpdateOne) SetNotNilStatus(value *uint8) *BannerUpdateOne {
	if value != nil {
		return b.SetStatus(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerCreate) SetNotNilStatus(value *uint8) *BannerCreate {
	if value != nil {
		return b.SetStatus(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerUpdate) SetNotNilEndpoint(value *string) *BannerUpdate {
	if value != nil {
		return b.SetEndpoint(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerUpdateOne) SetNotNilEndpoint(value *string) *BannerUpdateOne {
	if value != nil {
		return b.SetEndpoint(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerCreate) SetNotNilEndpoint(value *string) *BannerCreate {
	if value != nil {
		return b.SetEndpoint(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerUpdate) SetNotNilModule(value *string) *BannerUpdate {
	if value != nil {
		return b.SetModule(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerUpdateOne) SetNotNilModule(value *string) *BannerUpdateOne {
	if value != nil {
		return b.SetModule(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerCreate) SetNotNilModule(value *string) *BannerCreate {
	if value != nil {
		return b.SetModule(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerUpdate) SetNotNilFileType(value *uint8) *BannerUpdate {
	if value != nil {
		return b.SetFileType(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerUpdateOne) SetNotNilFileType(value *uint8) *BannerUpdateOne {
	if value != nil {
		return b.SetFileType(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerCreate) SetNotNilFileType(value *uint8) *BannerCreate {
	if value != nil {
		return b.SetFileType(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerUpdate) SetNotNilPath(value *string) *BannerUpdate {
	if value != nil {
		return b.SetPath(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerUpdateOne) SetNotNilPath(value *string) *BannerUpdateOne {
	if value != nil {
		return b.SetPath(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerCreate) SetNotNilPath(value *string) *BannerCreate {
	if value != nil {
		return b.SetPath(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerUpdate) SetNotNilJumpURL(value *string) *BannerUpdate {
	if value != nil {
		return b.SetJumpURL(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerUpdateOne) SetNotNilJumpURL(value *string) *BannerUpdateOne {
	if value != nil {
		return b.SetJumpURL(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (b *BannerCreate) SetNotNilJumpURL(value *string) *BannerCreate {
	if value != nil {
		return b.SetJumpURL(*value)
	}
	return b
}

// set field if value's pointer is not nil.
func (e *ExchangeUpdate) SetNotNilUpdatedAt(value *time.Time) *ExchangeUpdate {
	if value != nil {
		return e.SetUpdatedAt(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeUpdateOne) SetNotNilUpdatedAt(value *time.Time) *ExchangeUpdateOne {
	if value != nil {
		return e.SetUpdatedAt(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeCreate) SetNotNilUpdatedAt(value *time.Time) *ExchangeCreate {
	if value != nil {
		return e.SetUpdatedAt(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeUpdate) SetNotNilStatus(value *uint8) *ExchangeUpdate {
	if value != nil {
		return e.SetStatus(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeUpdateOne) SetNotNilStatus(value *uint8) *ExchangeUpdateOne {
	if value != nil {
		return e.SetStatus(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeCreate) SetNotNilStatus(value *uint8) *ExchangeCreate {
	if value != nil {
		return e.SetStatus(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeUpdate) SetNotNilPlayerID(value *uint64) *ExchangeUpdate {
	if value != nil {
		return e.SetPlayerID(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeUpdateOne) SetNotNilPlayerID(value *uint64) *ExchangeUpdateOne {
	if value != nil {
		return e.SetPlayerID(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeCreate) SetNotNilPlayerID(value *uint64) *ExchangeCreate {
	if value != nil {
		return e.SetPlayerID(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeUpdate) SetNotNilTransactionID(value *string) *ExchangeUpdate {
	if value != nil {
		return e.SetTransactionID(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeUpdateOne) SetNotNilTransactionID(value *string) *ExchangeUpdateOne {
	if value != nil {
		return e.SetTransactionID(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeCreate) SetNotNilTransactionID(value *string) *ExchangeCreate {
	if value != nil {
		return e.SetTransactionID(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeUpdate) SetNotNilType(value *uint32) *ExchangeUpdate {
	if value != nil {
		return e.SetType(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeUpdateOne) SetNotNilType(value *uint32) *ExchangeUpdateOne {
	if value != nil {
		return e.SetType(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeCreate) SetNotNilType(value *uint32) *ExchangeCreate {
	if value != nil {
		return e.SetType(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeUpdate) SetNotNilCoinNum(value *uint32) *ExchangeUpdate {
	if value != nil {
		return e.SetCoinNum(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeUpdateOne) SetNotNilCoinNum(value *uint32) *ExchangeUpdateOne {
	if value != nil {
		return e.SetCoinNum(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeCreate) SetNotNilCoinNum(value *uint32) *ExchangeCreate {
	if value != nil {
		return e.SetCoinNum(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeUpdate) SetNotNilLampNum(value *uint32) *ExchangeUpdate {
	if value != nil {
		return e.SetLampNum(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeUpdateOne) SetNotNilLampNum(value *uint32) *ExchangeUpdateOne {
	if value != nil {
		return e.SetLampNum(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (e *ExchangeCreate) SetNotNilLampNum(value *uint32) *ExchangeCreate {
	if value != nil {
		return e.SetLampNum(*value)
	}
	return e
}

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilUpdatedAt(value *time.Time) *FileUpdate {
	if value != nil {
		return f.SetUpdatedAt(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilUpdatedAt(value *time.Time) *FileUpdateOne {
	if value != nil {
		return f.SetUpdatedAt(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilUpdatedAt(value *time.Time) *FileCreate {
	if value != nil {
		return f.SetUpdatedAt(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilStatus(value *uint8) *FileUpdate {
	if value != nil {
		return f.SetStatus(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilStatus(value *uint8) *FileUpdateOne {
	if value != nil {
		return f.SetStatus(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilStatus(value *uint8) *FileCreate {
	if value != nil {
		return f.SetStatus(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilName(value *string) *FileUpdate {
	if value != nil {
		return f.SetName(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilName(value *string) *FileUpdateOne {
	if value != nil {
		return f.SetName(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilName(value *string) *FileCreate {
	if value != nil {
		return f.SetName(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilFileType(value *uint8) *FileUpdate {
	if value != nil {
		return f.SetFileType(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilFileType(value *uint8) *FileUpdateOne {
	if value != nil {
		return f.SetFileType(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilFileType(value *uint8) *FileCreate {
	if value != nil {
		return f.SetFileType(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilSize(value *uint64) *FileUpdate {
	if value != nil {
		return f.SetSize(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilSize(value *uint64) *FileUpdateOne {
	if value != nil {
		return f.SetSize(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilSize(value *uint64) *FileCreate {
	if value != nil {
		return f.SetSize(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilPath(value *string) *FileUpdate {
	if value != nil {
		return f.SetPath(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilPath(value *string) *FileUpdateOne {
	if value != nil {
		return f.SetPath(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilPath(value *string) *FileCreate {
	if value != nil {
		return f.SetPath(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilUserID(value *string) *FileUpdate {
	if value != nil {
		return f.SetUserID(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilUserID(value *string) *FileUpdateOne {
	if value != nil {
		return f.SetUserID(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilUserID(value *string) *FileCreate {
	if value != nil {
		return f.SetUserID(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdate) SetNotNilMd5(value *string) *FileUpdate {
	if value != nil {
		return f.SetMd5(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileUpdateOne) SetNotNilMd5(value *string) *FileUpdateOne {
	if value != nil {
		return f.SetMd5(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (f *FileCreate) SetNotNilMd5(value *string) *FileCreate {
	if value != nil {
		return f.SetMd5(*value)
	}
	return f
}

// set field if value's pointer is not nil.
func (o *OrderUpdate) SetNotNilUpdatedAt(value *time.Time) *OrderUpdate {
	if value != nil {
		return o.SetUpdatedAt(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdateOne) SetNotNilUpdatedAt(value *time.Time) *OrderUpdateOne {
	if value != nil {
		return o.SetUpdatedAt(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderCreate) SetNotNilUpdatedAt(value *time.Time) *OrderCreate {
	if value != nil {
		return o.SetUpdatedAt(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdate) SetNotNilStatus(value *uint8) *OrderUpdate {
	if value != nil {
		return o.SetStatus(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdateOne) SetNotNilStatus(value *uint8) *OrderUpdateOne {
	if value != nil {
		return o.SetStatus(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderCreate) SetNotNilStatus(value *uint8) *OrderCreate {
	if value != nil {
		return o.SetStatus(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdate) SetNotNilPlayerID(value *uint64) *OrderUpdate {
	if value != nil {
		return o.SetPlayerID(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdateOne) SetNotNilPlayerID(value *uint64) *OrderUpdateOne {
	if value != nil {
		return o.SetPlayerID(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderCreate) SetNotNilPlayerID(value *uint64) *OrderCreate {
	if value != nil {
		return o.SetPlayerID(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdate) SetNotNilType(value *string) *OrderUpdate {
	if value != nil {
		return o.SetType(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdateOne) SetNotNilType(value *string) *OrderUpdateOne {
	if value != nil {
		return o.SetType(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderCreate) SetNotNilType(value *string) *OrderCreate {
	if value != nil {
		return o.SetType(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdate) SetNotNilCode(value *string) *OrderUpdate {
	if value != nil {
		return o.SetCode(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdateOne) SetNotNilCode(value *string) *OrderUpdateOne {
	if value != nil {
		return o.SetCode(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderCreate) SetNotNilCode(value *string) *OrderCreate {
	if value != nil {
		return o.SetCode(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdate) SetNotNilTransactionID(value *string) *OrderUpdate {
	if value != nil {
		return o.SetTransactionID(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdateOne) SetNotNilTransactionID(value *string) *OrderUpdateOne {
	if value != nil {
		return o.SetTransactionID(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderCreate) SetNotNilTransactionID(value *string) *OrderCreate {
	if value != nil {
		return o.SetTransactionID(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdate) SetNotNilFromAddress(value *string) *OrderUpdate {
	if value != nil {
		return o.SetFromAddress(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdateOne) SetNotNilFromAddress(value *string) *OrderUpdateOne {
	if value != nil {
		return o.SetFromAddress(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderCreate) SetNotNilFromAddress(value *string) *OrderCreate {
	if value != nil {
		return o.SetFromAddress(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdate) SetNotNilToAddress(value *string) *OrderUpdate {
	if value != nil {
		return o.SetToAddress(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdateOne) SetNotNilToAddress(value *string) *OrderUpdateOne {
	if value != nil {
		return o.SetToAddress(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderCreate) SetNotNilToAddress(value *string) *OrderCreate {
	if value != nil {
		return o.SetToAddress(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdate) SetNotNilNum(value *float64) *OrderUpdate {
	if value != nil {
		return o.SetNum(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdateOne) SetNotNilNum(value *float64) *OrderUpdateOne {
	if value != nil {
		return o.SetNum(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderCreate) SetNotNilNum(value *float64) *OrderCreate {
	if value != nil {
		return o.SetNum(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdate) SetNotNilHandlingFee(value *float64) *OrderUpdate {
	if value != nil {
		return o.SetHandlingFee(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdateOne) SetNotNilHandlingFee(value *float64) *OrderUpdateOne {
	if value != nil {
		return o.SetHandlingFee(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderCreate) SetNotNilHandlingFee(value *float64) *OrderCreate {
	if value != nil {
		return o.SetHandlingFee(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdate) SetNotNilNetwork(value *string) *OrderUpdate {
	if value != nil {
		return o.SetNetwork(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdateOne) SetNotNilNetwork(value *string) *OrderUpdateOne {
	if value != nil {
		return o.SetNetwork(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderCreate) SetNotNilNetwork(value *string) *OrderCreate {
	if value != nil {
		return o.SetNetwork(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdate) SetNotNilRemark(value *string) *OrderUpdate {
	if value != nil {
		return o.SetRemark(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderUpdateOne) SetNotNilRemark(value *string) *OrderUpdateOne {
	if value != nil {
		return o.SetRemark(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (o *OrderCreate) SetNotNilRemark(value *string) *OrderCreate {
	if value != nil {
		return o.SetRemark(*value)
	}
	return o
}

// set field if value's pointer is not nil.
func (oic *OriginInviteCodeUpdate) SetNotNilUpdatedAt(value *time.Time) *OriginInviteCodeUpdate {
	if value != nil {
		return oic.SetUpdatedAt(*value)
	}
	return oic
}

// set field if value's pointer is not nil.
func (oic *OriginInviteCodeUpdateOne) SetNotNilUpdatedAt(value *time.Time) *OriginInviteCodeUpdateOne {
	if value != nil {
		return oic.SetUpdatedAt(*value)
	}
	return oic
}

// set field if value's pointer is not nil.
func (oic *OriginInviteCodeCreate) SetNotNilUpdatedAt(value *time.Time) *OriginInviteCodeCreate {
	if value != nil {
		return oic.SetUpdatedAt(*value)
	}
	return oic
}

// set field if value's pointer is not nil.
func (oic *OriginInviteCodeUpdate) SetNotNilStatus(value *uint8) *OriginInviteCodeUpdate {
	if value != nil {
		return oic.SetStatus(*value)
	}
	return oic
}

// set field if value's pointer is not nil.
func (oic *OriginInviteCodeUpdateOne) SetNotNilStatus(value *uint8) *OriginInviteCodeUpdateOne {
	if value != nil {
		return oic.SetStatus(*value)
	}
	return oic
}

// set field if value's pointer is not nil.
func (oic *OriginInviteCodeCreate) SetNotNilStatus(value *uint8) *OriginInviteCodeCreate {
	if value != nil {
		return oic.SetStatus(*value)
	}
	return oic
}

// set field if value's pointer is not nil.
func (oic *OriginInviteCodeUpdate) SetNotNilCode(value *string) *OriginInviteCodeUpdate {
	if value != nil {
		return oic.SetCode(*value)
	}
	return oic
}

// set field if value's pointer is not nil.
func (oic *OriginInviteCodeUpdateOne) SetNotNilCode(value *string) *OriginInviteCodeUpdateOne {
	if value != nil {
		return oic.SetCode(*value)
	}
	return oic
}

// set field if value's pointer is not nil.
func (oic *OriginInviteCodeCreate) SetNotNilCode(value *string) *OriginInviteCodeCreate {
	if value != nil {
		return oic.SetCode(*value)
	}
	return oic
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilUpdatedAt(value *time.Time) *PlayerUpdate {
	if value != nil {
		return pl.SetUpdatedAt(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilUpdatedAt(value *time.Time) *PlayerUpdateOne {
	if value != nil {
		return pl.SetUpdatedAt(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilUpdatedAt(value *time.Time) *PlayerCreate {
	if value != nil {
		return pl.SetUpdatedAt(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilStatus(value *uint8) *PlayerUpdate {
	if value != nil {
		return pl.SetStatus(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilStatus(value *uint8) *PlayerUpdateOne {
	if value != nil {
		return pl.SetStatus(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilStatus(value *uint8) *PlayerCreate {
	if value != nil {
		return pl.SetStatus(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilName(value *string) *PlayerUpdate {
	if value != nil {
		return pl.SetName(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilName(value *string) *PlayerUpdateOne {
	if value != nil {
		return pl.SetName(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilName(value *string) *PlayerCreate {
	if value != nil {
		return pl.SetName(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilEmail(value *string) *PlayerUpdate {
	if value != nil {
		return pl.SetEmail(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilEmail(value *string) *PlayerUpdateOne {
	if value != nil {
		return pl.SetEmail(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilEmail(value *string) *PlayerCreate {
	if value != nil {
		return pl.SetEmail(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilPassword(value *string) *PlayerUpdate {
	if value != nil {
		return pl.SetPassword(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilPassword(value *string) *PlayerUpdateOne {
	if value != nil {
		return pl.SetPassword(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilPassword(value *string) *PlayerCreate {
	if value != nil {
		return pl.SetPassword(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilTransactionPassword(value *string) *PlayerUpdate {
	if value != nil {
		return pl.SetTransactionPassword(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilTransactionPassword(value *string) *PlayerUpdateOne {
	if value != nil {
		return pl.SetTransactionPassword(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilTransactionPassword(value *string) *PlayerCreate {
	if value != nil {
		return pl.SetTransactionPassword(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilLamp(value *float32) *PlayerUpdate {
	if value != nil {
		return pl.SetLamp(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilLamp(value *float32) *PlayerUpdateOne {
	if value != nil {
		return pl.SetLamp(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilLamp(value *float32) *PlayerCreate {
	if value != nil {
		return pl.SetLamp(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilRank(value *uint32) *PlayerUpdate {
	if value != nil {
		return pl.SetRank(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilRank(value *uint32) *PlayerUpdateOne {
	if value != nil {
		return pl.SetRank(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilRank(value *uint32) *PlayerCreate {
	if value != nil {
		return pl.SetRank(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilAmount(value *float64) *PlayerUpdate {
	if value != nil {
		return pl.SetAmount(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilAmount(value *float64) *PlayerUpdateOne {
	if value != nil {
		return pl.SetAmount(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilAmount(value *float64) *PlayerCreate {
	if value != nil {
		return pl.SetAmount(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilDepositAddress(value *string) *PlayerUpdate {
	if value != nil {
		return pl.SetDepositAddress(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilDepositAddress(value *string) *PlayerUpdateOne {
	if value != nil {
		return pl.SetDepositAddress(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilDepositAddress(value *string) *PlayerCreate {
	if value != nil {
		return pl.SetDepositAddress(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilInvitedNum(value *uint32) *PlayerUpdate {
	if value != nil {
		return pl.SetInvitedNum(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilInvitedNum(value *uint32) *PlayerUpdateOne {
	if value != nil {
		return pl.SetInvitedNum(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilInvitedNum(value *uint32) *PlayerCreate {
	if value != nil {
		return pl.SetInvitedNum(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilTotalIncome(value *float64) *PlayerUpdate {
	if value != nil {
		return pl.SetTotalIncome(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilTotalIncome(value *float64) *PlayerUpdateOne {
	if value != nil {
		return pl.SetTotalIncome(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilTotalIncome(value *float64) *PlayerCreate {
	if value != nil {
		return pl.SetTotalIncome(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilProfitAndLoss(value *float32) *PlayerUpdate {
	if value != nil {
		return pl.SetProfitAndLoss(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilProfitAndLoss(value *float32) *PlayerUpdateOne {
	if value != nil {
		return pl.SetProfitAndLoss(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilProfitAndLoss(value *float32) *PlayerCreate {
	if value != nil {
		return pl.SetProfitAndLoss(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilRecent100WinPercent(value *float32) *PlayerUpdate {
	if value != nil {
		return pl.SetRecent100WinPercent(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilRecent100WinPercent(value *float32) *PlayerUpdateOne {
	if value != nil {
		return pl.SetRecent100WinPercent(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilRecent100WinPercent(value *float32) *PlayerCreate {
	if value != nil {
		return pl.SetRecent100WinPercent(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilInviteCode(value *string) *PlayerUpdate {
	if value != nil {
		return pl.SetInviteCode(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilInviteCode(value *string) *PlayerUpdateOne {
	if value != nil {
		return pl.SetInviteCode(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilInviteCode(value *string) *PlayerCreate {
	if value != nil {
		return pl.SetInviteCode(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilInviterID(value *uint64) *PlayerUpdate {
	if value != nil {
		return pl.SetInviterID(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilInviterID(value *uint64) *PlayerUpdateOne {
	if value != nil {
		return pl.SetInviterID(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilInviterID(value *uint64) *PlayerCreate {
	if value != nil {
		return pl.SetInviterID(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilInvitedCode(value *string) *PlayerUpdate {
	if value != nil {
		return pl.SetInvitedCode(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilInvitedCode(value *string) *PlayerUpdateOne {
	if value != nil {
		return pl.SetInvitedCode(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilInvitedCode(value *string) *PlayerCreate {
	if value != nil {
		return pl.SetInvitedCode(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdate) SetNotNilSystemCommission(value *float32) *PlayerUpdate {
	if value != nil {
		return pl.SetSystemCommission(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerUpdateOne) SetNotNilSystemCommission(value *float32) *PlayerUpdateOne {
	if value != nil {
		return pl.SetSystemCommission(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (pl *PlayerCreate) SetNotNilSystemCommission(value *float32) *PlayerCreate {
	if value != nil {
		return pl.SetSystemCommission(*value)
	}
	return pl
}

// set field if value's pointer is not nil.
func (r *RewardUpdate) SetNotNilUpdatedAt(value *time.Time) *RewardUpdate {
	if value != nil {
		return r.SetUpdatedAt(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdateOne) SetNotNilUpdatedAt(value *time.Time) *RewardUpdateOne {
	if value != nil {
		return r.SetUpdatedAt(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardCreate) SetNotNilUpdatedAt(value *time.Time) *RewardCreate {
	if value != nil {
		return r.SetUpdatedAt(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdate) SetNotNilStatus(value *uint8) *RewardUpdate {
	if value != nil {
		return r.SetStatus(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdateOne) SetNotNilStatus(value *uint8) *RewardUpdateOne {
	if value != nil {
		return r.SetStatus(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardCreate) SetNotNilStatus(value *uint8) *RewardCreate {
	if value != nil {
		return r.SetStatus(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdate) SetNotNilToID(value *uint64) *RewardUpdate {
	if value != nil {
		return r.SetToID(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdateOne) SetNotNilToID(value *uint64) *RewardUpdateOne {
	if value != nil {
		return r.SetToID(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardCreate) SetNotNilToID(value *uint64) *RewardCreate {
	if value != nil {
		return r.SetToID(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdate) SetNotNilContributorID(value *uint64) *RewardUpdate {
	if value != nil {
		return r.SetContributorID(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdateOne) SetNotNilContributorID(value *uint64) *RewardUpdateOne {
	if value != nil {
		return r.SetContributorID(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardCreate) SetNotNilContributorID(value *uint64) *RewardCreate {
	if value != nil {
		return r.SetContributorID(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdate) SetNotNilContributorEmail(value *string) *RewardUpdate {
	if value != nil {
		return r.SetContributorEmail(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdateOne) SetNotNilContributorEmail(value *string) *RewardUpdateOne {
	if value != nil {
		return r.SetContributorEmail(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardCreate) SetNotNilContributorEmail(value *string) *RewardCreate {
	if value != nil {
		return r.SetContributorEmail(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdate) SetNotNilContributorLevel(value *uint32) *RewardUpdate {
	if value != nil {
		return r.SetContributorLevel(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdateOne) SetNotNilContributorLevel(value *uint32) *RewardUpdateOne {
	if value != nil {
		return r.SetContributorLevel(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardCreate) SetNotNilContributorLevel(value *uint32) *RewardCreate {
	if value != nil {
		return r.SetContributorLevel(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdate) SetNotNilNum(value *float32) *RewardUpdate {
	if value != nil {
		return r.SetNum(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdateOne) SetNotNilNum(value *float32) *RewardUpdateOne {
	if value != nil {
		return r.SetNum(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardCreate) SetNotNilNum(value *float32) *RewardCreate {
	if value != nil {
		return r.SetNum(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdate) SetNotNilFormula(value *string) *RewardUpdate {
	if value != nil {
		return r.SetFormula(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdateOne) SetNotNilFormula(value *string) *RewardUpdateOne {
	if value != nil {
		return r.SetFormula(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardCreate) SetNotNilFormula(value *string) *RewardCreate {
	if value != nil {
		return r.SetFormula(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdate) SetNotNilRemark(value *string) *RewardUpdate {
	if value != nil {
		return r.SetRemark(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardUpdateOne) SetNotNilRemark(value *string) *RewardUpdateOne {
	if value != nil {
		return r.SetRemark(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RewardCreate) SetNotNilRemark(value *string) *RewardCreate {
	if value != nil {
		return r.SetRemark(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RoundUpdate) SetNotNilUpdatedAt(value *time.Time) *RoundUpdate {
	if value != nil {
		return r.SetUpdatedAt(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RoundUpdateOne) SetNotNilUpdatedAt(value *time.Time) *RoundUpdateOne {
	if value != nil {
		return r.SetUpdatedAt(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RoundCreate) SetNotNilUpdatedAt(value *time.Time) *RoundCreate {
	if value != nil {
		return r.SetUpdatedAt(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RoundUpdate) SetNotNilStatus(value *uint8) *RoundUpdate {
	if value != nil {
		return r.SetStatus(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RoundUpdateOne) SetNotNilStatus(value *uint8) *RoundUpdateOne {
	if value != nil {
		return r.SetStatus(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RoundCreate) SetNotNilStatus(value *uint8) *RoundCreate {
	if value != nil {
		return r.SetStatus(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RoundUpdate) SetNotNilTotalRoundCount(value *uint64) *RoundUpdate {
	if value != nil {
		return r.SetTotalRoundCount(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RoundUpdateOne) SetNotNilTotalRoundCount(value *uint64) *RoundUpdateOne {
	if value != nil {
		return r.SetTotalRoundCount(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RoundCreate) SetNotNilTotalRoundCount(value *uint64) *RoundCreate {
	if value != nil {
		return r.SetTotalRoundCount(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RoundUpdate) SetNotNilSelectedFold(value *uint32) *RoundUpdate {
	if value != nil {
		return r.SetSelectedFold(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RoundUpdateOne) SetNotNilSelectedFold(value *uint32) *RoundUpdateOne {
	if value != nil {
		return r.SetSelectedFold(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (r *RoundCreate) SetNotNilSelectedFold(value *uint32) *RoundCreate {
	if value != nil {
		return r.SetSelectedFold(*value)
	}
	return r
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdate) SetNotNilUpdatedAt(value *time.Time) *RoundInvestUpdate {
	if value != nil {
		return ri.SetUpdatedAt(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdateOne) SetNotNilUpdatedAt(value *time.Time) *RoundInvestUpdateOne {
	if value != nil {
		return ri.SetUpdatedAt(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestCreate) SetNotNilUpdatedAt(value *time.Time) *RoundInvestCreate {
	if value != nil {
		return ri.SetUpdatedAt(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdate) SetNotNilPlayerID(value *uint64) *RoundInvestUpdate {
	if value != nil {
		return ri.SetPlayerID(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdateOne) SetNotNilPlayerID(value *uint64) *RoundInvestUpdateOne {
	if value != nil {
		return ri.SetPlayerID(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestCreate) SetNotNilPlayerID(value *uint64) *RoundInvestCreate {
	if value != nil {
		return ri.SetPlayerID(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdate) SetNotNilPlayerEmail(value *string) *RoundInvestUpdate {
	if value != nil {
		return ri.SetPlayerEmail(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdateOne) SetNotNilPlayerEmail(value *string) *RoundInvestUpdateOne {
	if value != nil {
		return ri.SetPlayerEmail(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestCreate) SetNotNilPlayerEmail(value *string) *RoundInvestCreate {
	if value != nil {
		return ri.SetPlayerEmail(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdate) SetNotNilFoldNo(value *uint32) *RoundInvestUpdate {
	if value != nil {
		return ri.SetFoldNo(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdateOne) SetNotNilFoldNo(value *uint32) *RoundInvestUpdateOne {
	if value != nil {
		return ri.SetFoldNo(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestCreate) SetNotNilFoldNo(value *uint32) *RoundInvestCreate {
	if value != nil {
		return ri.SetFoldNo(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdate) SetNotNilLambNum(value *uint32) *RoundInvestUpdate {
	if value != nil {
		return ri.SetLambNum(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdateOne) SetNotNilLambNum(value *uint32) *RoundInvestUpdateOne {
	if value != nil {
		return ri.SetLambNum(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestCreate) SetNotNilLambNum(value *uint32) *RoundInvestCreate {
	if value != nil {
		return ri.SetLambNum(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdate) SetNotNilProfitAndLoss(value *float32) *RoundInvestUpdate {
	if value != nil {
		return ri.SetProfitAndLoss(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdateOne) SetNotNilProfitAndLoss(value *float32) *RoundInvestUpdateOne {
	if value != nil {
		return ri.SetProfitAndLoss(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestCreate) SetNotNilProfitAndLoss(value *float32) *RoundInvestCreate {
	if value != nil {
		return ri.SetProfitAndLoss(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdate) SetNotNilRoundID(value *uint64) *RoundInvestUpdate {
	if value != nil {
		return ri.SetRoundID(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdateOne) SetNotNilRoundID(value *uint64) *RoundInvestUpdateOne {
	if value != nil {
		return ri.SetRoundID(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestCreate) SetNotNilRoundID(value *uint64) *RoundInvestCreate {
	if value != nil {
		return ri.SetRoundID(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdate) SetNotNilRoundCount(value *uint32) *RoundInvestUpdate {
	if value != nil {
		return ri.SetRoundCount(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdateOne) SetNotNilRoundCount(value *uint32) *RoundInvestUpdateOne {
	if value != nil {
		return ri.SetRoundCount(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestCreate) SetNotNilRoundCount(value *uint32) *RoundInvestCreate {
	if value != nil {
		return ri.SetRoundCount(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdate) SetNotNilTotalRoundCount(value *uint64) *RoundInvestUpdate {
	if value != nil {
		return ri.SetTotalRoundCount(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestUpdateOne) SetNotNilTotalRoundCount(value *uint64) *RoundInvestUpdateOne {
	if value != nil {
		return ri.SetTotalRoundCount(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (ri *RoundInvestCreate) SetNotNilTotalRoundCount(value *uint64) *RoundInvestCreate {
	if value != nil {
		return ri.SetTotalRoundCount(*value)
	}
	return ri
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldUpdate) SetNotNilUpdatedAt(value *time.Time) *RoundLambFoldUpdate {
	if value != nil {
		return rlf.SetUpdatedAt(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldUpdateOne) SetNotNilUpdatedAt(value *time.Time) *RoundLambFoldUpdateOne {
	if value != nil {
		return rlf.SetUpdatedAt(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldCreate) SetNotNilUpdatedAt(value *time.Time) *RoundLambFoldCreate {
	if value != nil {
		return rlf.SetUpdatedAt(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldUpdate) SetNotNilFoldNo(value *uint32) *RoundLambFoldUpdate {
	if value != nil {
		return rlf.SetFoldNo(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldUpdateOne) SetNotNilFoldNo(value *uint32) *RoundLambFoldUpdateOne {
	if value != nil {
		return rlf.SetFoldNo(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldCreate) SetNotNilFoldNo(value *uint32) *RoundLambFoldCreate {
	if value != nil {
		return rlf.SetFoldNo(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldUpdate) SetNotNilLambNum(value *uint32) *RoundLambFoldUpdate {
	if value != nil {
		return rlf.SetLambNum(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldUpdateOne) SetNotNilLambNum(value *uint32) *RoundLambFoldUpdateOne {
	if value != nil {
		return rlf.SetLambNum(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldCreate) SetNotNilLambNum(value *uint32) *RoundLambFoldCreate {
	if value != nil {
		return rlf.SetLambNum(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldUpdate) SetNotNilRoundID(value *uint64) *RoundLambFoldUpdate {
	if value != nil {
		return rlf.SetRoundID(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldUpdateOne) SetNotNilRoundID(value *uint64) *RoundLambFoldUpdateOne {
	if value != nil {
		return rlf.SetRoundID(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldCreate) SetNotNilRoundID(value *uint64) *RoundLambFoldCreate {
	if value != nil {
		return rlf.SetRoundID(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldUpdate) SetNotNilProfitAndLoss(value *float32) *RoundLambFoldUpdate {
	if value != nil {
		return rlf.SetProfitAndLoss(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldUpdateOne) SetNotNilProfitAndLoss(value *float32) *RoundLambFoldUpdateOne {
	if value != nil {
		return rlf.SetProfitAndLoss(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldCreate) SetNotNilProfitAndLoss(value *float32) *RoundLambFoldCreate {
	if value != nil {
		return rlf.SetProfitAndLoss(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldUpdate) SetNotNilRoundCount(value *uint32) *RoundLambFoldUpdate {
	if value != nil {
		return rlf.SetRoundCount(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldUpdateOne) SetNotNilRoundCount(value *uint32) *RoundLambFoldUpdateOne {
	if value != nil {
		return rlf.SetRoundCount(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldCreate) SetNotNilRoundCount(value *uint32) *RoundLambFoldCreate {
	if value != nil {
		return rlf.SetRoundCount(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldUpdate) SetNotNilTotalRoundCount(value *uint64) *RoundLambFoldUpdate {
	if value != nil {
		return rlf.SetTotalRoundCount(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldUpdateOne) SetNotNilTotalRoundCount(value *uint64) *RoundLambFoldUpdateOne {
	if value != nil {
		return rlf.SetTotalRoundCount(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (rlf *RoundLambFoldCreate) SetNotNilTotalRoundCount(value *uint64) *RoundLambFoldCreate {
	if value != nil {
		return rlf.SetTotalRoundCount(*value)
	}
	return rlf
}

// set field if value's pointer is not nil.
func (s *SettingUpdate) SetNotNilUpdatedAt(value *time.Time) *SettingUpdate {
	if value != nil {
		return s.SetUpdatedAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SettingUpdateOne) SetNotNilUpdatedAt(value *time.Time) *SettingUpdateOne {
	if value != nil {
		return s.SetUpdatedAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SettingCreate) SetNotNilUpdatedAt(value *time.Time) *SettingCreate {
	if value != nil {
		return s.SetUpdatedAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SettingUpdate) SetNotNilStatus(value *uint8) *SettingUpdate {
	if value != nil {
		return s.SetStatus(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SettingUpdateOne) SetNotNilStatus(value *uint8) *SettingUpdateOne {
	if value != nil {
		return s.SetStatus(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SettingCreate) SetNotNilStatus(value *uint8) *SettingCreate {
	if value != nil {
		return s.SetStatus(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SettingUpdate) SetNotNilName(value *string) *SettingUpdate {
	if value != nil {
		return s.SetName(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SettingUpdateOne) SetNotNilName(value *string) *SettingUpdateOne {
	if value != nil {
		return s.SetName(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SettingCreate) SetNotNilName(value *string) *SettingCreate {
	if value != nil {
		return s.SetName(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SettingUpdate) SetNotNilModule(value *string) *SettingUpdate {
	if value != nil {
		return s.SetModule(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SettingUpdateOne) SetNotNilModule(value *string) *SettingUpdateOne {
	if value != nil {
		return s.SetModule(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SettingCreate) SetNotNilModule(value *string) *SettingCreate {
	if value != nil {
		return s.SetModule(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SettingUpdate) SetNotNilValue(value *string) *SettingUpdate {
	if value != nil {
		return s.SetValue(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SettingUpdateOne) SetNotNilValue(value *string) *SettingUpdateOne {
	if value != nil {
		return s.SetValue(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SettingCreate) SetNotNilValue(value *string) *SettingCreate {
	if value != nil {
		return s.SetValue(*value)
	}
	return s
}
